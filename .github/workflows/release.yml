name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  publish-crates:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Publish to crates.io
      run: cargo publish
      continue-on-error: true
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/')
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ''
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            suffix: ''
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: .exe
          - os: macos-13
            target: x86_64-apple-darwin
            suffix: ''
          - os: macos-14
            target: aarch64-apple-darwin
            suffix: ''

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install musl tools
      if: matrix.target == 'x86_64-unknown-linux-musl'
      run: sudo apt-get install -y musl-tools

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
      timeout-minutes: 30

    - name: Package
      shell: bash
      run: |
        cd target/${{ matrix.target }}/release
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          7z a ../../../rush-${{ matrix.target }}.zip taskrush${{ matrix.suffix }} rush${{ matrix.suffix }}
        else
          tar czvf ../../../rush-${{ matrix.target }}.tar.gz taskrush${{ matrix.suffix }} rush${{ matrix.suffix }}
        fi

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          rush-${{ matrix.target }}.*
        name: "TaskRush v${{ github.ref_name }}"
        body: |
          # TaskRush ${{ github.ref_name }}
          
          A modern task runner with parallel execution and intelligent caching.
          
          ## Installation
          ```bash
          cargo install taskrush
          ```
          
          ## Downloads
          - **Linux**: `rush-x86_64-unknown-linux-gnu.tar.gz` (glibc) or `rush-x86_64-unknown-linux-musl.tar.gz` (musl)
          - **macOS**: `rush-x86_64-apple-darwin.tar.gz` (Intel) or `rush-aarch64-apple-darwin.tar.gz` (Apple Silicon)
          - **Windows**: `rush-x86_64-pc-windows-msvc.zip`
          
          Each archive contains both `taskrush` and `rush` binaries.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


