name: Version Sync

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.2.4)'
        required: true
        type: string
      pre_release:
        description: 'Is this a pre-release?'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  packages: write

jobs:
  version-sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Validate version format
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid version format. Use semantic versioning (e.g., 1.2.3)"
            exit 1
          fi
          echo "✅ Version format is valid: $VERSION"

      - name: Check if version already exists
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if git tag --list | grep -q "^v$VERSION$"; then
            echo "❌ Version v$VERSION already exists as a git tag"
            exit 1
          fi
          echo "✅ Version v$VERSION is available"

      - name: Update all component versions
        run: |
          VERSION="${{ github.event.inputs.version }}"
          
          echo "📦 Updating Cargo.toml..."
          sed -i "s/^version = \".*\"/version = \"$VERSION\"/" Cargo.toml
          
          echo "📦 Updating npm package.json..."
          cd npm-package
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" package.json
          
          echo "📦 Updating npm install.js..."
          sed -i "s/const VERSION = 'v.*'/const VERSION = 'v$VERSION'/" install.js
          cd ..
          
          echo "📦 Updating VS Code extension..."
          cd vscode-extension
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" package.json
          cd ..
          
          echo "📦 Updating Homebrew formula..."
          sed -i "s|download/v[0-9.]*|download/v$VERSION|" Formula/taskrush.rb
          
          echo "📦 Updating README..."
          sed -i "s/v[0-9]\+\.[0-9]\+\.[0-9]\+/v$VERSION/g" README.md
          
          echo "✅ Updated all components to version $VERSION"

      - name: Verify Cargo.lock consistency
        run: |
          cargo check --quiet
          echo "✅ Cargo.lock is consistent"

      - name: Create version sync commit
        run: |
          VERSION="${{ github.event.inputs.version }}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add .
          if ! git diff --staged --quiet; then
            git commit -m "🔄 Sync all versions to v$VERSION"
            git push origin master
            echo "✅ Committed and pushed version sync changes"
          else
            echo "No changes to commit"
          fi

      - name: Create and push git tag
        run: |
          VERSION="${{ github.event.inputs.version }}"
          git tag -a "v$VERSION" -m "TaskRush v$VERSION"
          git push origin "v$VERSION"
          echo "✅ Created and pushed git tag v$VERSION"

      - name: Create summary
        run: |
          VERSION="${{ github.event.inputs.version }}"
          echo "🎉 Version sync complete for v$VERSION" >> $GITHUB_STEP_SUMMARY
          echo "Tag created, release workflows will run automatically." >> $GITHUB_STEP_SUMMARY
